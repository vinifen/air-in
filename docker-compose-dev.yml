

services:
  db:
    container_name: db
    build: ./db
    env_file:
      - .env
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - db-network

  frontend:
    container_name: frontend
    image: node:23-alpine3.20  
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend 
    environment:
      - WEB_BACK_URL=${WEB_SCHEME_DEV}://${WEB_DOMAIN_DEV}:${WEB_PORT_DEV}${WEB_BACK_PATH}
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    networks:
      - air-in-network
    depends_on:
      - backend
    entrypoint: >
      sh -c "
        /frontend/configureFrontend.sh && 
        ng serve --host 0.0.0.0 --disable-host-check
      "

  backend:
    container_name: backend
    image: node:23-alpine3.20  
    working_dir: /backend
    volumes:
      - ./backend:/backend
    env_file:
      - .env
    environment:
      - WEB_URL="${WEB_SCHEME_DEV}://${WEB_DOMAIN_DEV}:${WEB_PORT_DEV}"
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    networks:
      - air-in-network
      - db-network
    depends_on:
      - db
    entrypoint: >
      sh -c "
        [ -d node_modules ] && rm -rf node_modules || echo 'frontend node_modules does not exist';
        npm install && 
        npm run dev
      "
    dns:
      - 8.8.8.8

  web:
    container_name: web
    build: ./web
    env_file:
      - .env
    environment:
      - WEB_PORT=0.0.0.0:${WEB_PORT_DEV}
      - WEB_DOMAIN=${WEB_DOMAIN_DEV}
      - FRONT_URL="http://frontend:${FRONT_PORT}/"
      - BACK_URL="http://backend:${BACK_PORT}/"
    ports:
      - "${WEB_PORT_DEV}:${WEB_PORT_DEV}"
    networks:
      - air-in-network
    depends_on:
      - frontend

networks:
  air-in-network:
    driver: bridge
  db-network:
    driver: bridge
